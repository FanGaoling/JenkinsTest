String workspace = '/home/app/jenkins/'

pipeline {
    agent any
    options {
        timeout(time:1,unit:'HOURS')
    }
    parameters{
        String{
            name:'',
            defaultValue:''
            describe:''
        }
    }
    stages {
        stage('ShareLibrary') {
            when { 
                environment name: 'stageName', value: 'build'
            }
            steps {
                script{ 
                    echo '获取代码'
                }
            }
        }
        stage('Build - Staging') {
            steps {    
               // echo "参数：${params}"
               //echo "用户名2 ${params.deploy_username}"
               echo '获取代码'
            }
        }
        stage('Test - Staging') {
            steps {
                echo 'Testing'
                script{
                    // sh '/home/app/jenkins/testreturn.sh > commandResult'
                    sh "${workspace}testreturn.sh > commandResult"
                    name=readFile('commandResult').trim()
                    echo "${name}" // 返回值应该是lisi
                    name=sh(script: "/home/app/jenkins/testreturn2.sh", returnStdout: true).trim()
                    echo "${name}" // 返回值应该是wangwu
                }
            }
        }
        stage('Parallel - Staging'){
            failFast true 
            parallel{
                stage('Parallel - A'){
                    //agent
                    steps{
                        echo '-- on Parallel - A'
                    }
                }
                stage('Parallel - B'){
                    //agent
                    steps{
                        echo '-- on Parallel - B'
                    }
                }
            } 
        }
        stage('RetryAndTimeout - Staging') {
            steps {
                retry(3) {
                    // sh './flakey-deploy.sh'
                }
                timeout(time: 3, unit: 'MINUTES') {
                    // sh './health-check.sh'
                }
            }
            post {
                    always {
                        echo 'post in stage'
                    }
                }
        }
    }
    post{
        always {
            echo '-- This will always run'
        }
        changed {
            echo '-- This will run only if the state of the Pipeline has changed'
            echo '-- For example, if the Pipeline was previously failing but is now successful'
        }
        failure {
            echo '-- This will run only if failed'
        }
        success {
            echo '-- This will run only if successful'
        }
        unstable {            
            echo '-- This will run only if the run was marked as unstable'
        }
        aborted {
            echo '-- This will run only if aborted'
        }
    }
}
